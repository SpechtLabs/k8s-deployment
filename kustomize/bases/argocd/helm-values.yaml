global:
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway

  domain: argocd.cedi.dev

  image:
    repository: "ghcr.io/cedi-dev/argocd-custom-container"
    imagePullPolicy: "Always"
    tag: "latest"

  logging:
    format: json

  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

dex:
  enabled: true

  containerSecurityContext:
    runAsNonRoot: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

redis:
  serviceAccount:
    create: true

  exporter:
    enabled: false

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

repoServer:
  replicas: 2

  volumes:
    - name: helm-secrets
      secret:
        secretName: helm-secrets

  volumeMounts:
    - mountPath: /helm-secrets/
      name: helm-secrets

  env:
    - name: XDG_CONFIG_HOME
      value: /home/argocd/.config

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

  containerSecurityContext:
    runAsUser: 1000

server:
  replicas: 2

  certificate:
    enabled: false

  ingress:
    enabled: true
    https: true
    ingressClassName: nginx

    pathType: ImplementationSpecific
    hosts:
      - argocd.cedi.dev

    tls: true

    annotations:
      "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      "nginx.ingress.kubernetes.io/backend-protocol": HTTPS
      "nginx.ingress.kubernetes.io/ssl-passthrough": "true"

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

  containerSecurityContext:
    runAsUser: 1000

applicationSet:
  replicas: 2

  containerSecurityContext:
  runAsNonRoot: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

controller:
  # -- The number of application controller pods to run.
  # If changing the number of replicas you must pass the number as `ARGOCD_CONTROLLER_REPLICAS` as an environment variable
  replicas: 2

  dynamicClusterDistribution: true

  containerSecurityContext:
    runAsNonRoot: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

      additionalLabels:
        instance: primary

      selector:
        scope: k8s-cedi-dev

notifications:
  enabled: false

configs:
  cm:
    exec.enabled: "true"
    kustomize.buildOptions: "--enable-alpha-plugins --enable-helm"

    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: $dex.oauth.github.clientID
            clientSecret: $dex.oauth.github.clientSecret
            orgs:
              - name: cedi-dev

    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"

  params:
    create: true
    otlp.address: "tempo-distributor.observability.svc.cluster.local:4317"

  rbac:
    create: true
    policy.default: role:readonly
    policy.csv: |
      p, role:org-admin, *, *, *, allow
      p, role:viewer, *, get, *, allow

      g, cedi-dev:argocd, role:viewer
      g, cedi-dev:admin, role:org-admin

  secret:
    extra:
      dex.oauth.github.clientID: foobar1234
      dex.oauth.github.clientSecret: fooobar2345

  repositories:
    bitnami:
      name: bitnami
      type: helm
      url: https://charts.bitnami.com/bitnami
    grafana:
      name: grafana
      type: helm
      url: https://grafana.github.io/helm-charts
    argo:
      name: Argo
      type: helm
      url: https://argoproj.github.io/argo-helm
    jetstack:
      name: jetstack
      type: helm
      url: https://charts.jetstack.io
    ingress-nginx:
      name: ingress-nginx
      type: helm
      url: https://kubernetes.github.io/ingress-nginx
    deliveryhero:
      name: deliveryhero
      type: helm
      url: https://charts.deliveryhero.io/
    prometheus:
      name: prometheus
      type: helm
      url: https://prometheus-community.github.io/helm-charts
    syself:
      name: syself
      type: helm
      url: https://charts.syself.com
