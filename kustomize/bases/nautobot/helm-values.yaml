nautobot:
  extraVars:
    - name: "SECURE_SSL_REDIRECT"
      value: "True"
    - name: "SESSION_COOKIE_SECURE"
      value: "True"
    - name: "CSRF_COOKIE_SECURE"
      value: "True"

ingress:
  enabled: true
  ingressClassName: "nginx"
  hostname: nautobot.cedi.dev
  tls: true
  secretName: "nautobot-tls"
  backendProtocol: "http"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod

metrics:
  enabled: true

  capacityMetrics:
    enabled: true

  prometheusRule:
    enabled: true
    rules:
      - alert: "NautobotAbsent"
        annotations:
          description: "Nautobot has disappeared from Prometheus service discovery."
          summary: "Nautobot is down."
        expr: |
          absent(up{job=~".*nautobot.*"} == 1)
        for: "5m"
        labels:
          severity: "critical"

postgresql:
  postgresqlPassword: "foobar2342"

  primary:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: nautobot
                  app.kubernetes.io/name: postgresql
              namespaces:
                - nautobot
              topologyKey: topology.kubernetes.io/region
            weight: 1

  readReplicas:
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway

redis:
  auth:
    password: "foobar2342"

  master:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: nautobot
                  app.kubernetes.io/name: redis
              namespaces:
                - nautobot
              topologyKey: topology.kubernetes.io/region
            weight: 1

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway

  replica:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: nautobot
                  app.kubernetes.io/name: redis
              namespaces:
                - nautobot
              topologyKey: topology.kubernetes.io/region
            weight: 1

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway