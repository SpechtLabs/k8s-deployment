apiVersion: v1
kind: List
items:
  - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
    kind: KubeadmConfigTemplate
    metadata:
      name: worker-template
      namespace: default
    spec:
      template:
        spec:
          files: &file_list
            - content: |
                net.ipv4.conf.lxc*.rp_filter = 0
              owner: root:root
              path: /etc/sysctl.d/99-cilium.conf
              permissions: "0744"
            - content: |
                overlay
                br_netfilter
              owner: root:root
              path: /etc/modules-load.d/crio.conf
              permissions: "0744"
            - content: |
                net.bridge.bridge-nf-call-iptables  = 1
                net.bridge.bridge-nf-call-ip6tables = 1
                net.ipv4.ip_forward                 = 1
              owner: root:root
              path: /etc/sysctl.d/99-kubernetes-cri.conf
              permissions: "0744"
            - content: |
                vm.overcommit_memory=1
                kernel.panic=10
                kernel.panic_on_oops=1
              owner: root:root
              path: /etc/sysctl.d/99-kubelet.conf
              permissions: "0744"
            - content: |
                fs.inotify.max_user_instances = 1280
                fs.inotify.max_user_watches   = 655360
              owner: root:root
              path: /etc/sysctl.d/99-local.conf
              permissions: "0744"
            - content: |
                nameserver 1.1.1.1
                nameserver 1.0.0.1
                nameserver 2606:4700:4700::1111
              owner: root:root
              path: /etc/kubernetes/resolv.conf
              permissions: "0744"
            - content: |
                [Unit]
                Description=containerd container runtime
                Documentation=https://containerd.io
                After=network.target local-fs.target dbus.service

                [Service]
                ExecStartPre=-/sbin/modprobe overlay
                ExecStart=/usr/local/bin/containerd

                Type=notify
                Delegate=yes
                KillMode=process
                Restart=always
                RestartSec=5

                # Having non-zero Limit*s causes performance problems due to accounting overhead
                # in the kernel. We recommend using cgroups to do container-local accounting.
                LimitNPROC=infinity
                LimitCORE=infinity

                # Comment TasksMax if your systemd version does not supports it.
                # Only systemd 226 and above support this version.
                TasksMax=infinity
                OOMScoreAdjust=-999

                [Install]
                WantedBy=multi-user.target
              owner: root:root
              path: /etc/systemd/system/containerd.service
              permissions: "0744"
            - content: |
                {
                  "cniVersion": "0.4.0",
                  "name": "containerd-net",
                  "plugins": [
                    {
                      "type": "bridge",
                      "bridge": "cni0",
                      "isGateway": true,
                      "ipMasq": true,
                      "ipam": {
                        "type": "host-local",
                        "subnet": "10.88.0.0/16",
                        "routes": [{"dst": "0.0.0.0/0"}]
                      }
                    },
                    {
                      "type": "portmap",
                      "capabilities": {"portMappings": true},
                      "snat": true
                    }
                  ]
                }
              owner: root:root
              path: /etc/cni/net.d/10-containerd-net.conflist
              permissions: "0744"
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs: &joinKubeletExtraArgs
                authentication-token-webhook: "true"
                authorization-mode: Webhook
                cloud-provider: external
                event-qps: "5"
                max-pods: "220"
                read-only-port: "0"
                resolv-conf: /etc/kubernetes/resolv.conf
                rotate-server-certificates: "true"
                tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256
          preKubeadmCommands: &preKubeadmCommands
            - set -x
            - export CONTAINERD=2.1.1
            - export KUBERNETES_VERSION="v1.33.1"
            - export RUNC=1.3.0
            - export CNI_PLUGIN=1.7.1
            - export KUBERNETES_VERSION_MAJOR="${KUBERNETES_VERSION%.*}"
            - export KUBERNETES_VERSION_CLEAN=$(echo $KUBERNETES_VERSION | sed 's/^v//')
            - export ARCH="$(dpkg --print-architecture)"
            - localectl set-locale LANG=en_US.UTF-8
            - localectl set-locale LANGUAGE=en_US.UTF-8
            - apt-get update -y
            - apt-get -y install at jq unzip wget socat mtr logrotate apt-transport-https bat gpg
            - sed -i '/swap/d' /etc/fstab
            - swapoff -a
            - modprobe overlay && modprobe br_netfilter && sysctl --system
            - wget https://github.com/opencontainers/runc/releases/download/v$RUNC/runc.$ARCH
            - wget https://github.com/opencontainers/runc/releases/download/v$RUNC/runc.sha256sum
            - sha256sum --check --ignore-missing runc.sha256sum
            - install runc.$ARCH /usr/local/sbin/runc
            - rm -f runc.$ARCH runc.sha256sum
            - wget https://github.com/containerd/containerd/releases/download/v$CONTAINERD/containerd-$CONTAINERD-linux-$ARCH.tar.gz
            - wget https://github.com/containerd/containerd/releases/download/v$CONTAINERD/containerd-$CONTAINERD-linux-$ARCH.tar.gz.sha256sum
            - sha256sum --check containerd-$CONTAINERD-linux-$ARCH.tar.gz.sha256sum
            - tar -zxf containerd-$CONTAINERD-linux-$ARCH.tar.gz -C /usr/local
            - rm -f containerd-$CONTAINERD-linux-$ARCH.tar.gz containerd-$CONTAINERD-linux-$ARCH.tar.gz.sha256sum
            - mkdir -p /etc/containerd
            - containerd config default > /etc/containerd/config.toml
            - sed -i  "s/SystemdCgroup = false/SystemdCgroup = true/" /etc/containerd/config.toml
            - systemctl daemon-reload && systemctl enable containerd && systemctl start containerd
            - mkdir -p /opt/cni/bin
            - wget https://github.com/containernetworking/plugins/releases/download/v$CNI_PLUGIN/cni-plugins-linux-$ARCH-v$CNI_PLUGIN.tgz
            - wget https://github.com/containernetworking/plugins/releases/download/v$CNI_PLUGIN/cni-plugins-linux-$ARCH-v$CNI_PLUGIN.tgz.sha256
            - sha256sum --check cni-plugins-linux-$ARCH-v$CNI_PLUGIN.tgz.sha256
            - tar -C /opt/cni/bin -xzf cni-plugins-linux-$ARCH-v$CNI_PLUGIN.tgz
            - rm cni-plugins-linux-$ARCH-v$CNI_PLUGIN.tgz
            - mkdir -p /etc/apt/keyrings/
            - curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION_MAJOR/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            - echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION_MAJOR/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            - apt-get update
            - apt-get install -y kubelet=$KUBERNETES_VERSION_CLEAN-1.1 kubeadm=$KUBERNETES_VERSION_CLEAN-1.1 kubectl=$KUBERNETES_VERSION_CLEAN-1.1 bash-completion
            - apt-mark hold kubelet kubectl kubeadm
            - systemctl enable kubelet
            - kubeadm config images pull --kubernetes-version $KUBERNETES_VERSION_CLEAN
            - echo 'source <(kubectl completion bash)' >>/root/.bashrc
            - echo 'export KUBECONFIG=/etc/kubernetes/admin.conf' >>/root/.bashrc
            - apt-get -y autoremove && apt-get -y clean all

  - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
    kind: KubeadmConfigTemplate
    metadata:
      name: worker-template-x86-taints
      namespace: default
    spec:
      template:
        spec:
          files: *file_list
          joinConfiguration:
            nodeRegistration:
              taints:
                - key: arch
                  value: amd64
                  effect: NoSchedule
              kubeletExtraArgs: *joinKubeletExtraArgs
          preKubeadmCommands: *preKubeadmCommands
