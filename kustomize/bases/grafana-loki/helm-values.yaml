fullnameOverride: loki

deploymentMode: SimpleScalable

loki:
  auth_enabled: true

  storage:
    type: s3
    bucketNames:
      chunks: loki-chunk
      ruler: loki-ruler
      admin: loki-admin
    s3:
      endpoint: s3.eu-central-003.backblazeb2.com
      region: eu-central-003
      accessKeyId: ${S3_ACCESS_KEY_ID}
      secretAccessKey: ${S3_ACCESS_KEY}
      s3ForcePathStyle: true
      insecure: false

  schemaConfig:
    configs:
      - from: 2024-04-21
        object_store: s3
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h

gateway:
  replicas: 3

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: gateway
              app.kubernetes.io/instance: loki
              app.kubernetes.io/name: loki
          topologyKey: topology.kubernetes.io/region

write:
  replicas: 3
  extraArgs:
    - "-config.expand-env=true"

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: write
              app.kubernetes.io/instance: loki
              app.kubernetes.io/name: loki
          topologyKey: topology.kubernetes.io/region

  extraEnvFrom:
    - secretRef:
        name: loki-s3-secret

  resources:
    requests:
      memory: 313Mi
      cpu: 35m
    limits:
      memory: 313Mi

read:
  replicas: 3
  extraArgs:
    - "-config.expand-env=true"

  extraEnvFrom:
    - secretRef:
        name: loki-s3-secret

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: read
              app.kubernetes.io/instance: loki
              app.kubernetes.io/name: loki
          topologyKey: topology.kubernetes.io/region

  resources:
    requests:
      cpu: 27m
      memory: 137Mi
    limits:
      memory: 137Mi

backend:
  replicas: 3

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: backend
              app.kubernetes.io/instance: loki
              app.kubernetes.io/name: loki
          topologyKey: topology.kubernetes.io/region

  resources:
    requests:
      cpu: 22m
      memory: 100Mi
    limits:
      memory: 100Mi

monitoring:
  serviceMonitor:
    enabled: true

    additionalLabels:
      instance: primary

  dashboards:
    enabled: true
    namespace: observability
    labels:
      grafana_dashboard: "1"
    annotations:
      grafana_folder: "Grafana Loki"

  selfMonitoring:
    enabled: true
    tenant:
      name: fake
    grafanaAgent:
      installOperator: false

test:
  enabled: true
  prometheusAddress: "http://prom-stack-prometheus.monitoring.svc.cluster.local:9090"

chunksCache:
  enabled: true
  allocatedMemory: 4096
