fullnameOverride: loki

loki:
  auth_enabled: false
  storage:
    type: s3
    bucketNames:
      chunks: loki-chunk
      ruler: loki-ruler
      admin: loki-admin
    s3:
      endpoint: s3.eu-central-003.backblazeb2.com
      region: eu-central-003
      accessKeyId: ${S3_ACCESS_KEY_ID}
      secretAccessKey: ${S3_ACCESS_KEY}
      s3ForcePathStyle: true
      insecure: false

gateway:
  replicas: 3

  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alertmanager
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

write:
  replicas: 3
  extraArgs:
    - "-config.expand-env=true"

  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alertmanager
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

  extraEnvFrom:
    - secretRef:
        name: loki-s3-secret

  resources:
    requests:
      memory: "100Mi"
      cpu: "40m"
    limits:
      memory: "500Mi"
      cpu: "80m"

read:
  replicas: 3
  extraArgs:
    - "-config.expand-env=true"

  extraEnvFrom:
    - secretRef:
        name: loki-s3-secret

  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alertmanager
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

  resources:
    requests:
      memory: "100Mi"
      cpu: "10m"
    limits:
      memory: "250Mi"
      cpu: "45m"

backend:
  replicas: 3

  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alertmanager
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

  resources:
    requests:
      memory: "100Mi"
      cpu: "15m"
    limits:
      memory: "400Mi"
      cpu: "40m"

monitoring:
  serviceMonitor:
    enabled: true

    additionalLabels:
      instance: primary

  dashboards:
    enabled: true
    namespace: observability
    labels:
      grafana_dashboard: "1"
    annotations:
      grafana_folder: 'Grafana Loki'

  selfMonitoring:
    enabled: true
    tenant:
      name: fake
    grafanaAgent:
      installOperator: false

test:
  enabled: true
  prometheusAddress: "http://prom-stack-prometheus.monitoring.svc.cluster.local:9090"

tracing:
  jaegerAgentHost: "http://tempo-distributor.observability.svc.cluster.local"
