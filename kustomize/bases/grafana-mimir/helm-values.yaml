fullnameOverride: mimir

metaMonitoring:
  serviceMonitor:
    enabled: true

    additionalLabels:
      instance: primary

  grafanaAgent:
    enabled: true
    installOperator: false

continuous_test:
  enabled: true

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

minio:
  enabled: false

global:
  extraEnv:
    - name: JAEGER_AGENT_HOST
      value: "tempo-distributor.observability.svc.cluster.local"
    - name: JAEGER_AGENT_PORT
      value: "6831"
    - name: JAEGER_SAMPLER_TYPE
      value: "const"
    - name: JAEGER_DISABLED
      value: "false"
    - name: JAEGER_SERVICE_NAME
      value: "mimir"


  extraEnvFrom:
    - secretRef:
        name: mimir-s3-secret

  # Grafana Mimir does not track changes to the credentials.
  # If the credentials change, Grafana Mimir pods should be restarted to use the new value.
  # To trigger a restart, provide a global pod annotation in global.podAnnotation which will
  # be applied to all Grafana Mimir pods. Changing the value of the global annotation will make
  # Kubernetes recreate all pods. For example, changing global.podAnnotations.bucketSecretVersion
  # from "0" to "1" triggers a restart. Note that pod annotations can only be strings.
  podAnnotations:
    bucketSecretVersion: "1"

mimir:
  structuredConfig:
    common:
      storage:
        backend: s3
        s3:
          endpoint: s3.eu-central-003.backblazeb2.com
          region: eu-central-003
          access_key_id: ${S3_ACCESS_KEY_ID}
          secret_access_key: ${S3_ACCESS_KEY}
          insecure: false

    memberlist:
      abort_if_cluster_join_fails: true

    ingester:
      ring:
        unregister_on_shutdown: true
        #replication_factor: 3

    limits:
      # Adjust max query parallelism to 16x sharding, without sharding we can run 14d queries fully in parallel.
      # With sharding we can further shard each day another 16 times. 14 days * 16 shards = 224 subqueries.
      max_query_parallelism: 224
      max_global_series_per_user: 0
      ingestion_rate: 0
      # Delete from storage metrics data older than 1 year.
      compactor_blocks_retention_period: 1y
      # Allow ingestion of out-of-order samples up to 30 minutes since the latest received sample for the series.
      out_of_order_time_window: 30m

    blocks_storage:
      s3:
        bucket_name: mimir-tsdb

    alertmanager_storage:
      s3:
        bucket_name: mimir-alert

    ruler_storage:
      s3:
        bucket_name: mimir-ruler

    distributor:
      remote_timeout: 4s

nginx:
  replicas: 3
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

ingester:
  replicas: 3

  persistentVolume:
    size: 50Gi

  resources:
    requests:
      cpu: 221m
      memory: 2260Mi
    limits:
      memory: 2260Mi

  zoneAwareReplication:
    enabled: true
    topologyKey: 'topology.kubernetes.io/region'
    zones:
      - name: fsn
        nodeSelector:
          topology.kubernetes.io/region: fsn1
      - name: nbg
        nodeSelector:
          topology.kubernetes.io/region: nbg1
      - name: hel
        nodeSelector:
          topology.kubernetes.io/region: hel1

    topologySpreadConstraints:
      maxSkew: 3
      topologyKey: topology.kubernetes.io/region
      whenUnsatisfiable: ScheduleAnyway

store_gateway:
  replicas: 3

  resources:
    requests:
      cpu: 48m
      memory: 461Mi
    limits:
      memory: 461Mi

  persistentVolume:
    size: 10Gi

  zoneAwareReplication:
    enabled: true
    topologyKey: 'topology.kubernetes.io/region'
    zones:
      - name: fsn
        nodeSelector:
          topology.kubernetes.io/region: fsn1
      - name: nbg
        nodeSelector:
          topology.kubernetes.io/region: nbg1
      - name: hel
        nodeSelector:
          topology.kubernetes.io/region: hel1

    topologySpreadConstraints:
      maxSkew: 3
      topologyKey: topology.kubernetes.io/region
      whenUnsatisfiable: ScheduleAnyway

alertmanager:
  enabled: false
  persistentVolume:
    enabled: true
  replicas: 1
  statefulSet:
    enabled: true

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alertmanager
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

compactor:
  persistentVolume:
    size: 20Gi

  resources:
    requests:
      cpu: 944m
      memory: 335Mi
    limits:
      memory: 335Mi

distributor:
  replicas: 3

  resources:
    requests:
      cpu: 80m
      memory: 196Mi
    limits:
      memory: 196Mi

  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: distributor
                app.kubernetes.io/instance: mimir
                app.kubernetes.io/name: mimir
            topologyKey: topology.kubernetes.io/region
          weight: 100

overrides_exporter:
  replicas: 1

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

querier:
  replicas: 3

  resources:
    requests:
      cpu: 87m
      memory: 257Mi
    limits:
      memory: 257Mi

query_frontend:
  replicas: 3

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

query_scheduler:
  enabled: true
  replicas: 3

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi
ruler:
  replicas: 3

  resources:
    requests:
      cpu: 18m
      memory: 100Mi
    limits:
      memory: 100Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: ruler
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

chunks-cache:
  enabled: true
  replicas: 3
  allocatedMemory: 2048

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 200Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: chunks-cache
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

index-cache:
  enabled: true
  replicas: 3
  allocatedMemory: 2048

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: index-cache
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

metadata-cache:
  enabled: true

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: metadata-cache
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

results-cache:
  enabled: true
  replicas: 3

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: results-cache
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          topologyKey: topology.kubernetes.io/region

rollout_operator:
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi