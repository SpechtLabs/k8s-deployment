apiVersion: v1
kind: ConfigMap
metadata:
    annotations:
        kustomize.config.k8s.io/behavior: replace
    name: mimir-config
    namespace: observability
data:
    mimir.yaml: |
        activity_tracker:
          filepath: /data/metrics-activity.log

        alertmanager:
          data_dir: /data
          enable_api: true
          external_url: /alertmanager

        alertmanager_storage:
          backend: s3
          s3:
            access_key_id: mimir
            bucket_name: mimir-alert
            endpoint: minio.minio.svc.cluster.local:9000
            insecure: true
            secret_access_key: 6dsHNLYF7XjJgVXcJQ7FmXGucUsw7

        # This configures how the store-gateway synchronizes blocks stored in the bucket. It uses Minio by default for getting started (configured via flags) but this should be changed for production deployments.
        blocks_storage:
          backend: s3
          bucket_store:
            sync_dir: /data/tsdb-sync
          s3:
            access_key_id: mimir
            bucket_name: mimir-tsdb
            endpoint: minio.minio.svc.cluster.local:9000
            insecure: true
            secret_access_key: 6dsHNLYF7XjJgVXcJQ7FmXGucUsw7
          tsdb:
            dir: /data/tsdb

        compactor:
          data_dir: "/data"

        frontend:
          align_queries_with_step: true
          log_queries_longer_than: 10s
          parallelize_shardable_queries: true

        frontend_worker:
          frontend_address: mimir-query-frontend-headless.observability.svc.cluster.local:9095

        ingester:
          ring:
            final_sleep: 0s
            num_tokens: 512
            tokens_file_path: /data/tokens
            unregister_on_shutdown: false

        ingester_client:
          grpc_client_config:
            max_recv_msg_size: 104857600
            max_send_msg_size: 104857600

        limits:
          # Adjust max query parallelism to 16x sharding, without sharding we can run 14d queries fully in parallel.
          # With sharding we can further shard each day another 16 times. 14 days * 16 shards = 224 subqueries.
          max_query_parallelism: 224
          max_global_series_per_user: 0

        memberlist:
          abort_if_cluster_join_fails: false
          compression_enabled: false
          join_members:
          - dns+mimir-gossip-ring.observability.svc.cluster.local:7946

        querier:
          # With query sharding we run more but smaller queries. We must strike a balance
          # which allows us to process more sharded queries in parallel when requested, but not overload
          # queriers during non-sharded queries.
          max_concurrent: 16

        query_scheduler:
          # Increase from default of 100 to account for queries created by query sharding
          max_outstanding_requests_per_tenant: 1600

        ruler:
          alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.mimir-alertmanager-headless.observability.svc.cluster.local/alertmanager
          enable_api: true
          rule_path: /data

        ruler_storage:
          backend: s3
          s3:
            access_key_id: mimir
            bucket_name: mimir-ruler
            endpoint: minio.minio.svc.cluster.local:9000
            insecure: true
            secret_access_key: 6dsHNLYF7XjJgVXcJQ7FmXGucUsw7

        runtime_config:
          file: /var/mimir/runtime.yaml

        server:
          grpc_server_max_concurrent_streams: 1000
          grpc_server_max_connection_age: 2m
          grpc_server_max_connection_age_grace: 5m
          grpc_server_max_connection_idle: 1m

        store_gateway:
          sharding_ring:
            tokens_file_path: /data/tokens
