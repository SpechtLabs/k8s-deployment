apiVersion: 1
datasources:
  - name: Mimir
    type: prometheus
    uid: mimir
    url: http://mimir-nginx.observability.svc.cluster.local/prometheus
    access: proxy
    editable: false
    jsonData:
      timeInterval: 10s
      manageAlerts: true
      alertmanagerUid: mimir-alertmanager
  - name: Mimir-Alertmanager
    type: alertmanager
    uid: mimir-alertmanager
    url: http://prom-stack-alertmanager.monitoring:9093/
    access: proxy
    editable: false
    jsonData:
      implementation: mimir
  - name: Prometheus
    type: prometheus
    uid: prometheus
    url: http://prom-stack-prometheus.monitoring:9090/
    access: proxy
    editable: false
    jsonData:
      timeInterval: 30s
      manageAlerts: true
      alertmanagerUid: alertmanager
  - name: Alertmanager
    type: alertmanager
    uid: alertmanager
    url: http://prom-stack-alertmanager.monitoring:9093/
    access: proxy
    editable: false
    jsonData:
      implementation: prometheus
  - name: Loki
    type: loki
    uid: loki
    url: http://grafana-loki.monitoring:3100
    access: proxy
    editable: false
    jsonData:
      manageAlerts: false
      derivedFields:
        - name: "traceID"
          matcherRegex: "traceID=(\\w+)"
          url: "$${__value.raw}"
          datasourceUid: tempo
      maxLines: 1000
  - name: Tempo
    type: tempo
    uid: tempo
    url: http://tempo-query-frontend.observability:3100
    access: proxy
    editable: false
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: "loki"
        tags: ["job", "instance", "pod", "namespace"]
        mappedTags: [{ key: "service.name", value: "service" }]
        mapTagNamesEnabled: false
        spanStartTimeShift: "1h"
        spanEndTimeShift: "1h"
        filterByTraceID: false
        filterBySpanID: false
      serviceMap:
        datasourceUid: "prometheus"
      search:
        hide: false
      nodeGraph:
        enabled: true
      lokiSearch:
        datasourceUid: "loki"
